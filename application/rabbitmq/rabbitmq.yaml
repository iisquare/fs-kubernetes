apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: svr-app
  labels:
    app: rabbitmq
spec:
  ports:
  - port: 15672
    name: management
  # clusterIP: None
  selector:
    app: rabbitmq
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: svr-app
spec:
  selector:
    matchLabels:
      app: rabbitmq
  serviceName: rabbitmq
  replicas: 3
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                  - node78
                  - node79
                  - node80
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - rabbitmq
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: rabbitmq
        image: rabbitmq:3.8.9-management
        env:
        - name: RABBITMQ_ERLANG_COOKIE
          value: k8s-rabbitmq
        - name: RABBITMQ_DEFAULT_USER
          value: admin
        - name: RABBITMQ_DEFAULT_PASS
          value: admin888
        - name: RABBITMQ_USE_LONGNAME
          value: "true" # rabbitmq-<index>.rabbitmq.svr-app.svc.cluster.local
        ports:
        - name: amqp-tls
          containerPort: 5671
          hostPort: 5671
        - name: amqp
          containerPort: 5672
          hostPort: 5672
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq/mnesia
      volumes:
      - name: rabbitmq-data
        hostPath:
          path: /data/k8s-pv/rabbitmq
